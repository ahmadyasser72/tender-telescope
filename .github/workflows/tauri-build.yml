name: "publish"

on:
  workflow_dispatch:
  push:
    tags:
      - "app-v*"

jobs:
  build-astro:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: setup bun
        uses: oven-sh/setup-bun@v2
      - name: install dependencies (bun)
        run: bun install --frozen-lockfile
      - name: build frontend
        env:
          PIXABAY_API_KEY: ${{ secrets.PIXABAY_API_KEY }}
          VOICE_RSS_API_KEY: ${{ secrets.VOICE_RSS_API_KEY }}
        run: bun run build

      - uses: actions/upload-artifact@v4
        with:
          name: astro-build
          path: dist

  publish-tauri:
    needs: build-astro
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # - platform: "macos-latest" # for Arm based macs (M1 and above).
          #   args: "--target aarch64-apple-darwin"
          # - platform: "macos-latest" # for Intel based macs.
          #   args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: ""
          - platform: "windows-latest"
            args: ""

          - platform: "ubuntu-22.04"
            android: true
            args: "--apk --split-per-abi"

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup bun
        uses: oven-sh/setup-bun@v2
      - name: install dependencies (bun)
        run: bun install --frozen-lockfile

      - uses: actions/download-artifact@v4
        with:
          name: astro-build
          path: dist

      - name: Setup Java
        if: matrix.android
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Android SDK
        if: matrix.android
        uses: android-actions/setup-android@v3
      - name: Setup Android NDK
        if: matrix.android
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26d
          link-to-sdk: true

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.android && 'aarch64-linux-android,armv7-linux-androideabi' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: init android
        if: matrix.android
        env:
          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          bun add -D @tauri-apps/cli
          bun tauri android init

      - uses: ahmadyasser72/tauri-action@42269c0cb8fb330dfc4797733aca6c8b4d600a01
        env:
          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          mobile: ${{ matrix.android }}
          prerelease: false
          args: ${{ matrix.args }}
